# Contexte

## Prolif√©ration des donn√©es

- Num√©risation et innovations technologiques ont r√©duit le co√ªt de production de la donn√©e ;
    + Volume de donn√©es produites en explosion

. . .

- L'utilisation des statistiques n'est pas nouvelle (cf. [Desrosi√®res](https://www.cairn.info/la-politique-des-grands-nombres--9782707165046.htm))...

. . .

- ... mais une place accrue :
    + Dans le d√©bat public et l'action publique ([Supiot](https://www.fayard.fr/sciences-humaines/la-gouvernance-par-les-nombres-9782213681092), [Martin](https://www.cairn.info/l-empire-des-chiffres--9782200625719.htm)) ;
    + Dans les strat√©gies d'entreprise.


## Diversification des donn√©es {.smaller}

- Des donn√©es de nature tr√®s diff√©rentes:
    - Donn√©es structur√©es classiques ;
    - Donn√©es g√©olocalis√©es ;
    - Donn√©es textuelles et non structur√©es ;
    - Images, sons et vid√©os.

. . .

- Besoin de nouvelles m√©thodes pour valoriser ces donn√©es :
    - _Machine learning_ (re)devenu un outil classique ;
    - R√©seaux de neurone pour les probl√®mes complexes (NLP, CV)...

::: {.callout-tip}
## Pourquoi le _machine learning_ ?

- Meilleure prise en compte des non-lin√©arit√©s que statistique param√©trique ;
- Simplicit√© √† mise en oeuvre op√©rationnelle ;
- ...
:::

## Diversification des donn√©es (1/4)

### Donn√©es tabulaires classiques


```{ojs}
viewof info_mutations = Inputs.radio(
  ["Tableau", "Graphique"], {value: "Tableau"}
)
```

```{ojs}
info_mutations == "Tableau" ? html`<div>${table_mutations1}<div>` : html`<div>${plot_mutations}<div>`
```

```{ojs}
//| output: false
url = "https://files.data.gouv.fr/geo-dvf/latest/csv/2020/communes/92/92049.csv"
proxy = "https://corsproxy.io/?"
dvf = d3.csv(proxy + url)
```

```{ojs}
//| output: false
table_mutations1 = Inputs.table(dvf, {"columns": ['date_mutation', 'valeur_fonciere', 'adresse_nom_voie']})
plot_mutations = Plot.plot({
  y: {grid: true, label: "Nombre de transactions"},
  x: {
    ticks: 12,
    transform: (d) => Math.pow(10, d),
    type: "log",
    tickFormat: "~s",
    label: "Prix (√©chelle log) ‚Üí"
  },
  marks: [
    Plot.rectY(
      dvf.filter(d => d.valeur_fonciere > 10000),
      Plot.binX({y: "count"},
      {
        x: d => Math.log10(d.valeur_fonciere),
        tip: true
      })
    ),
    Plot.ruleY([0])
  ]
})
```

```{ojs}
Plot = require("https://cdn.jsdelivr.net/npm/@observablehq/plot@0.6.10/dist/plot.umd.min.js")
```


## Diversification des donn√©es (1/4) 

### Donn√©es tabulaires classiques

- Donn√©es __structur√©es__ sous forme de tableau

![Source: [Hadley Wickham, _R for data science_](https://r4ds.hadley.nz/data-tidy.html)](https://r4ds.hadley.nz/images/tidy-1.png)


- {{< fa brands python >}} tr√®s bien outill√© pour ces donn√©es (si volum√©trie adapt√©e)


## Diversification des donn√©es (2/4)

<h3>Donn√©es g√©olocalis√©es</h3>

```{ojs}
viewof info_power_plants = Inputs.radio(
  ["Tableau", "Carte"], {value: "Tableau"}
)
```

```{ojs}
info_power_plants == "Tableau" ? html`<div>${table_power_plants}<div>` : html`<div>${plot_power_plants}<div>`
```


```{ojs}
//| output: false
import {us_power_plants, states} from "@observablehq/build-your-first-map-with-observable-plot"

table_power_plants = Inputs.table(
  us_power_plants
)


plot_power_plants = Plot.plot({
  projection: "albers-usa",
  marks: [
    Plot.geo(states, { fill: "white", stroke: "#e2e2e2"  }),
    Plot.dot(us_power_plants, {
      x: "longitude",
      y: "latitude",
      r: "Total_MW",
      fill: "PrimSource",
      opacity: 0.7,
      tip: true
    }),
    Plot.dot(us_power_plants, { // Can you figure out what this additional Plot.dot layer adds?
      x: "longitude",
      y: "latitude",
      r: "Total_MW",
      fill: "PrimSource",
      stroke: "black",
      filter: d => d.Total_MW > 3500,
    }),
    Plot.text(us_power_plants, { // Add text to the map using data from us_power_plants
      x: "longitude", // Place text horizontally at plant longitude
      y: "latitude", // Place text vertically at plant latitude
      text: "Plant_Name", // The text that appears is the value from the Plant_Name column,
      filter: (d) => d.Total_MW > 3500, // Only add text for plants with capacity exceeding 3500 MW
      fontSize: 12, // Increased font size
      fontWeight: 600, // Increased font weight
      stroke: "white", // Adds white outer stroke to text (for readability)
      fill: "black", // Text fill color
      textAnchor: "start", // Left align text with the x- and y-coordinates
      dx: 15 // Shifts text to the right (starting from left alignment with coordinate)
    })
  ],
  r: { range: [1, 15] },
  color: { legend: true },
  height: 500,
  width: 800,
  margin: 50
})
```

## Diversification des donn√©es (2/4)

<h3>Donn√©es g√©olocalis√©es</h3>

- Donn√©es tabulaires avec une dimension spatiale suppl√©mentaire
    + Dimension g√©ographique prend des formes multiples:
    + Points, lignes, polygones...

. . .

- {{< fa brands python >}} tr√®s bien outill√© pour ces donn√©es (si volum√©trie adapt√©e)

## Diversification des donn√©es (3/4) {.smaller}

<h3>Donn√©es textuelles et non structur√©es</h3>

- Techniques statistiques anciennes ([Levenshtein 1957](https://en.wikipedia.org/wiki/Levenshtein_distance), [perceptron](https://fr.wikipedia.org/wiki/Perceptron)) ;

. . .

- Applications limit√©es jusqu'aux ann√©es 2010 ;

. . .

- D√©veloppement tr√®s rapide de la recherche :
    + Collecte accrue : r√©seaux sociaux, enqu√™tes...
    + Baisse co√ªts stockage & augmentation ressources traitement ;
    + Nouvelles techniques statistiques: _webscraping_, LLM...

. . .

- Utilisation intensive dans l'administration, la recherche et le secteur priv√©
    + Plus d'infos dans mon cours sur les [donn√©es √©mergentes](https://ensai-donnees-emergentes.netlify.app/textes)

## Diversification des donn√©es (3/4) {.smaller}

<h3>Donn√©es textuelles et non structur√©es</h3>


- Les __[LLM]{.blue2}__ bien s√ªr...
- ... Mais pas que !

<br>


```{ojs}
viewof activite = Inputs.text( 
  {label: '', value: 'data scientist', width: 800}
)
```


```{ojs}
d3.json(urlApe).then(res => {
  var IC, results;

  ({ IC, ...results } = res);

  IC = parseFloat(IC);

  const rows = Object.values(results).map(obj => {
    return `
    <tr>
      <td>${obj.code} | ${obj.libelle}</td>
      <td>${obj.probabilite.toFixed(3)}</td>
    </tr>
  `;
  }).join('');

  const confidenceRow = `<tr>
    <td colspan="2" style="text-align:left; "><em>Indice de confiance : ${IC.toFixed(3)}</em></td>
  </tr>`;

  const tableHTML = html`
  <table>
    <caption>
      Pr√©diction de l'activit√©
    </caption>
    <tr>
      <th style="text-align:center;">Libell√© (NA2008)</th>
      <th>Probabilit√©</th>
    </tr>
      ${rows}
      ${confidenceRow}
  </table>`;

  // Now you can use the tableHTML as needed, for example, inserting it into the DOM.
  // For example, assuming you have a container with the id "tableContainer":
  return tableHTML;
});
```

```{ojs}
activite_debounce = debounce(viewof activite, 2000)
urlApe = `https://codification-ape-test.lab.sspcloud.fr/predict?nb_echos_max=3&prob_min=0&text_feature=${activite_debounce}`
```

```{ojs}
import {debounce} from "@mbostock/debouncing-input"
```


## Diversification des donn√©es (4/4)

### Images, sons et vid√©os

![Plus d'infos dans ce cours sur les [donn√©es √©mergentes](https://ensai-donnees-emergentes.netlify.app/textes) que je donne avec Tom Seimandi](https://nanonets.com/blog/content/images/2020/08/1_Hz6t-tokG1niaUfmcysusw.jpeg)



## Diversit√© des m√©thodes de _machine learning_

- Dispose-t-on de __[donn√©es labellis√©es]{.orange}__ ou pas ? 
    - Apprentissage supervis√© vs non supervis√© ;
    - Question √©valuation _ex post_ des mod√®les: labellisation

. . .

- Quelle variable d'int√©r√™t dans un cadre supervis√© ?
    - R√©gression vs classification

. . .

- Quels algorithmes choisir ?

## Diversit√© des m√©thodes de _machine learning_

![](https://scikit-learn.org/stable/_static/ml_map.png)


## `Scikit-Learn`: un point d'entr√©e unifi√© {.smaller}

- La librairie de r√©f√©rence pour le ML
    + D√©velopp√©e par l'Inria üá´üá∑üêì

. . .

- Toutes les √©tapes d'un _pipeline_ basique
    + Pr√©paration des donn√©es: _train/test split_, imputation, standardisation, etc.
    + Estimation: toutes les m√©thodes ont la m√™me structure
    + Evaluation: m√©triques de performance, validation crois√©e, etc.

. . .

- Structure formelle de _pipeline_
    + Facilitera la mise en production

