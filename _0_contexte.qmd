# Introduction

## [Qui suis-je ?](https://www.linogaliana.fr/) [{{< fa brands firefox size=tiny >}}](https://linogaliana.fr) [{{< fa brands github size=tiny>}}](https://github.com/linogaliana) [{{< fa brands twitter size=tiny >}}](https://twitter.com/LinoGaliana) [{{< fa brands linkedin size=tiny >}}](https://www.linkedin.com/in/linogaliana/) [[<svg viewBox="0 0 25 28" width="25" height="28"><path d="M12.5 22.6667C11.3458 22.6667 10.3458 22.4153 9.5 21.9127C8.65721 21.412 7.98339 20.7027 7.55521 19.8654C7.09997 18.9942 6.76672 18.0729 6.56354 17.1239C6.34796 16.0947 6.24294 15.0483 6.25 14C6.25 13.1699 6.30417 12.3764 6.41354 11.6176C6.52188 10.8598 6.72292 10.0894 7.01563 9.30748C7.30833 8.52555 7.68542 7.84763 8.14479 7.27274C8.62304 6.68378 9.24141 6.20438 9.95208 5.87163C10.6979 5.51244 11.5458 5.33333 12.5 5.33333C13.6542 5.33333 14.6542 5.58467 15.5 6.08733C16.3428 6.588 17.0166 7.29733 17.4448 8.13459C17.8969 8.99644 18.2271 9.9103 18.4365 10.8761C18.6448 11.841 18.75 12.883 18.75 14C18.75 14.8301 18.6958 15.6236 18.5865 16.3824C18.4699 17.1702 18.2639 17.9446 17.9719 18.6925C17.6698 19.4744 17.2948 20.1524 16.8427 20.7273C16.3906 21.3021 15.7927 21.7692 15.0479 22.1284C14.3031 22.4876 13.4542 22.6667 12.5 22.6667ZM14.7063 16.2945C15.304 15.6944 15.6365 14.864 15.625 14C15.625 13.1073 15.326 12.3425 14.7292 11.7055C14.1313 11.0685 13.3885 10.75 12.5 10.75C11.6115 10.75 10.8688 11.0685 10.2708 11.7055C9.68532 12.3123 9.36198 13.1405 9.375 14C9.375 14.8927 9.67396 15.6575 10.2708 16.2945C10.8688 16.9315 11.6115 17.25 12.5 17.25C13.3885 17.25 14.124 16.9315 14.7063 16.2945ZM12.5 27C19.4031 27 25 21.1792 25 14C25 6.82075 19.4031 1 12.5 1C5.59687 1 0 6.82075 0 14C0 21.1792 5.59687 27 12.5 27Z"></path></svg>](https://observablehq.com/@linogaliana)]{.orange} [{{< fa brands python size=tiny >}}](https://pythonds.linogaliana.fr/)



- _Data scientist_ au lab de l'Insee :
    + [Administrateur Insee](https://www.insee.fr/fr/information/4774197) ;
    + Coordonnateur d'un [réseau de _data scientists_](https://ssphub.netlify.app/)

. . .

- Accompagnement de projets _data science_ ;


## [Qui suis-je ?](https://www.linogaliana.fr/)

D'autres cours que je donne à l'ENSAE ou l'Insee peuvent vous intéresser: 

- [`Python` pour la _data science_](https://pythonds.linogaliana.fr/) ;
- [Mise en production de projets _data science_](https://ensae-reproductibilite.github.io/website/) ;
- [Bonnes pratiques en `R` et `Git`](https://inseefrlab.github.io/formation-bonnes-pratiques-git-R/) ;
- [Données émergentes](https://ensai-donnees-emergentes.netlify.app) ;

__Et surtout consultez le portail complet de formation du [datalab de l'Insee](https://www.sspcloud.fr/formation)__


# Contexte

## Prolifération des données

- Numérisation et innovations technologiques ont réduit le coût de production de la donnée ;
    + Volume de données produites en explosion

. . .

- L'utilisation des statistiques n'est pas nouvelle (cf. [Desrosières](https://www.cairn.info/la-politique-des-grands-nombres--9782707165046.htm))...

. . .

- ... mais une place accrue :
    + Dans le débat public et l'action publique ([Supiot](https://www.fayard.fr/sciences-humaines/la-gouvernance-par-les-nombres-9782213681092), [Martin](https://www.cairn.info/l-empire-des-chiffres--9782200625719.htm)) ;
    + Dans les stratégies d'entreprise.


## Diversification des données {.smaller}

- Des données de nature très différentes:
    - Données structurées classiques ;
    - Données géolocalisées ;
    - Données textuelles et non structurées ;
    - Images, sons et vidéos.

. . .

- Besoin de nouvelles méthodes pour valoriser ces données :
    - _Machine learning_ (re)devenu un outil classique ;
    - Réseaux de neurone pour les problèmes complexes (NLP, CV)...

::: {.callout-tip}
## Pourquoi le _machine learning_ ?

- Meilleure prise en compte des non-linéarités que statistique paramétrique ;
- Simplicité à mise en oeuvre opérationnelle ;
- ...
:::

## Diversification des données (1/4)

### Données tabulaires classiques


```{ojs}
viewof info_mutations = Inputs.radio(
  ["Tableau", "Graphique"], {value: "Tableau"}
)
```

```{ojs}
info_mutations == "Tableau" ? html`<div>${table_mutations1}<div>` : html`<div>${plot_mutations}<div>`
```

```{ojs}
//| output: false
url = "https://files.data.gouv.fr/geo-dvf/latest/csv/2020/communes/92/92049.csv"
proxy = "https://corsproxy.io/?"
dvf = d3.csv(proxy + url)
```

```{ojs}
//| output: false
table_mutations1 = Inputs.table(dvf, {"columns": ['date_mutation', 'valeur_fonciere', 'adresse_nom_voie']})
plot_mutations = Plot.plot({
  y: {grid: true, label: "Nombre de transactions"},
  x: {
    ticks: 12,
    transform: (d) => Math.pow(10, d),
    type: "log",
    tickFormat: "~s",
    label: "Prix (échelle log) →"
  },
  marks: [
    Plot.rectY(
      dvf.filter(d => d.valeur_fonciere > 10000),
      Plot.binX({y: "count"},
      {
        x: d => Math.log10(d.valeur_fonciere),
        tip: true
      })
    ),
    Plot.ruleY([0])
  ]
})
```

```{ojs}
Plot = require("https://cdn.jsdelivr.net/npm/@observablehq/plot@0.6.10/dist/plot.umd.min.js")
```


## Diversification des données (1/4) 

### Données tabulaires classiques

- Données __structurées__ sous forme de tableau

![Source: [Hadley Wickham, _R for data science_](https://r4ds.hadley.nz/data-tidy.html)](https://r4ds.hadley.nz/images/tidy-1.png)


- {{< fa brands python >}} très bien outillé pour ces données (si volumétrie adaptée)


## Diversification des données (2/4)

<h3>Données géolocalisées</h3>

```{ojs}
viewof info_power_plants = Inputs.radio(
  ["Tableau", "Carte"], {value: "Tableau"}
)
```

```{ojs}
info_power_plants == "Tableau" ? html`<div>${table_power_plants}<div>` : html`<div>${plot_power_plants}<div>`
```


```{ojs}
//| output: false
import {us_power_plants, states} from "@observablehq/build-your-first-map-with-observable-plot"

table_power_plants = Inputs.table(
  us_power_plants
)


plot_power_plants = Plot.plot({
  projection: "albers-usa",
  marks: [
    Plot.geo(states, { fill: "white", stroke: "#e2e2e2"  }),
    Plot.dot(us_power_plants, {
      x: "longitude",
      y: "latitude",
      r: "Total_MW",
      fill: "PrimSource",
      opacity: 0.7,
      tip: true
    }),
    Plot.dot(us_power_plants, { // Can you figure out what this additional Plot.dot layer adds?
      x: "longitude",
      y: "latitude",
      r: "Total_MW",
      fill: "PrimSource",
      stroke: "black",
      filter: d => d.Total_MW > 3500,
    }),
    Plot.text(us_power_plants, { // Add text to the map using data from us_power_plants
      x: "longitude", // Place text horizontally at plant longitude
      y: "latitude", // Place text vertically at plant latitude
      text: "Plant_Name", // The text that appears is the value from the Plant_Name column,
      filter: (d) => d.Total_MW > 3500, // Only add text for plants with capacity exceeding 3500 MW
      fontSize: 12, // Increased font size
      fontWeight: 600, // Increased font weight
      stroke: "white", // Adds white outer stroke to text (for readability)
      fill: "black", // Text fill color
      textAnchor: "start", // Left align text with the x- and y-coordinates
      dx: 15 // Shifts text to the right (starting from left alignment with coordinate)
    })
  ],
  r: { range: [1, 15] },
  color: { legend: true },
  height: 500,
  width: 800,
  margin: 50
})
```

## Diversification des données (2/4)

<h3>Données géolocalisées</h3>

- Données tabulaires avec une dimension spatiale supplémentaire
    + Dimension géographique prend des formes multiples:
    + Points, lignes, polygones...

. . .

- {{< fa brands python >}} très bien outillé pour ces données (si volumétrie adaptée)

## Diversification des données (3/4) {.smaller}

<h3>Données textuelles et non structurées</h3>

- Techniques statistiques anciennes ([Levenshtein 1957](https://en.wikipedia.org/wiki/Levenshtein_distance), [perceptron](https://fr.wikipedia.org/wiki/Perceptron)) ;

. . .

- Applications limitées jusqu'aux années 2010 ;

. . .

- Développement très rapide de la recherche :
    + Collecte accrue : réseaux sociaux, enquêtes...
    + Baisse coûts stockage & augmentation ressources traitement ;
    + Nouvelles techniques statistiques: _webscraping_, LLM...

. . .

- Utilisation intensive dans l'administration, la recherche et le secteur privé
    + Plus d'infos dans mon cours sur les [données émergentes](https://ensai-donnees-emergentes.netlify.app/textes)

## Diversification des données (3/4) {.smaller}

<h3>Données textuelles et non structurées</h3>


- Les __[LLM]{.blue2}__ bien sûr...
- ... Mais pas que !

<br>


```{ojs}
viewof activite = Inputs.text( 
  {label: '', value: 'data scientist', width: 800}
)
```


```{ojs}
d3.json(urlApe).then(res => {
  var IC, results;

  ({ IC, ...results } = res);

  IC = parseFloat(IC);

  const rows = Object.values(results).map(obj => {
    return `
    <tr>
      <td>${obj.code} | ${obj.libelle}</td>
      <td>${obj.probabilite.toFixed(3)}</td>
    </tr>
  `;
  }).join('');

  const confidenceRow = `<tr>
    <td colspan="2" style="text-align:left; "><em>Indice de confiance : ${IC.toFixed(3)}</em></td>
  </tr>`;

  const tableHTML = html`
  <table>
    <caption>
      Prédiction de l'activité
    </caption>
    <tr>
      <th style="text-align:center;">Libellé (NA2008)</th>
      <th>Probabilité</th>
    </tr>
      ${rows}
      ${confidenceRow}
  </table>`;

  // Now you can use the tableHTML as needed, for example, inserting it into the DOM.
  // For example, assuming you have a container with the id "tableContainer":
  return tableHTML;
});
```

```{ojs}
activite_debounce = debounce(viewof activite, 2000)
urlApe = `https://codification-ape-test.lab.sspcloud.fr/predict?nb_echos_max=3&prob_min=0&text_feature=${activite_debounce}`
```

```{ojs}
import {debounce} from "@mbostock/debouncing-input"
```


## Diversification des données (4/4)

### Images, sons et vidéos

![Plus d'infos dans mon cours sur les [données émergentes](https://ensai-donnees-emergentes.netlify.app/textes)](https://nanonets.com/blog/content/images/2020/08/1_Hz6t-tokG1niaUfmcysusw.jpeg)



## Diversité des méthodes de _machine learning_

- Dispose-t-on de données labellisées ou pas ? 
    - Apprentissage supervisé vs non supervisé ;
    - Question évaluation _ex post_ des modèles: labellisation

- Quelle variable d'intérêt dans un cadre supervisé ?
    - Régression vs classification

- Quels algorithmes choisir ?

## Diversité des méthodes de _machine learning_

![](https://scikit-learn.org/stable/_static/ml_map.png)


## `Scikit-Learn`: un point d'entrée unifié {.smaller}

- La librairie de référence pour le ML
    + Développée par l'Inria 🇫🇷🐓

. . .

- Toutes les étapes d'un _pipeline_ basique
    + Préparation des données: _train/test split_, imputation, standardisation, etc.
    + Estimation: toutes les méthodes ont la même structure
    + Evaluation: métriques de performance, validation croisée, etc.

. . .

- Structure formelle de _pipeline_
    + Facilitera la mise en production

