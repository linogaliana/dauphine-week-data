---
title: Construire un pipeline de machine learning
subtitle: |
  **[Une introduction aux enjeux de mise en production]{.orange}**
author:
    - name: "**[[Lino Galiana](https://www.linogaliana.fr/)]{.blue2}**"
      email: lino.galiana@insee.fr
      affiliations:
        - name: "[__Insee__]{.orange}"

#date: 06-09-2023
slide-number: true
footer: |
  **_PSL Data Week_**
# uncomment for French presentations:
lang: fr-FR
# for blind readers:
slide-tone: false
# for @olevitt:
#chalkboard: # press the B key to toggle chalkboard
#  theme: whiteboard
# uncomment to use the multiplex mode:
#multiplex: true
format:
  # pick the light mode (onyxia-revealjs) or the dark mode (onyxia-dark-revealjs)
  onyxia-revealjs
  #onyxia-dark-revealjs:
    #output-file: slides.html
from: markdown+emoji
css: custom.css
---



# Introduction

## [Qui suis-je ?](https://www.linogaliana.fr/) [{{< fa brands firefox size=tiny >}}](https://linogaliana.fr) [{{< fa brands github size=tiny>}}](https://github.com/linogaliana) [{{< fa brands twitter size=tiny >}}](https://twitter.com/LinoGaliana) [{{< fa brands linkedin size=tiny >}}](https://www.linkedin.com/in/linogaliana/) [[<svg viewBox="0 0 25 28" width="25" height="28"><path d="M12.5 22.6667C11.3458 22.6667 10.3458 22.4153 9.5 21.9127C8.65721 21.412 7.98339 20.7027 7.55521 19.8654C7.09997 18.9942 6.76672 18.0729 6.56354 17.1239C6.34796 16.0947 6.24294 15.0483 6.25 14C6.25 13.1699 6.30417 12.3764 6.41354 11.6176C6.52188 10.8598 6.72292 10.0894 7.01563 9.30748C7.30833 8.52555 7.68542 7.84763 8.14479 7.27274C8.62304 6.68378 9.24141 6.20438 9.95208 5.87163C10.6979 5.51244 11.5458 5.33333 12.5 5.33333C13.6542 5.33333 14.6542 5.58467 15.5 6.08733C16.3428 6.588 17.0166 7.29733 17.4448 8.13459C17.8969 8.99644 18.2271 9.9103 18.4365 10.8761C18.6448 11.841 18.75 12.883 18.75 14C18.75 14.8301 18.6958 15.6236 18.5865 16.3824C18.4699 17.1702 18.2639 17.9446 17.9719 18.6925C17.6698 19.4744 17.2948 20.1524 16.8427 20.7273C16.3906 21.3021 15.7927 21.7692 15.0479 22.1284C14.3031 22.4876 13.4542 22.6667 12.5 22.6667ZM14.7063 16.2945C15.304 15.6944 15.6365 14.864 15.625 14C15.625 13.1073 15.326 12.3425 14.7292 11.7055C14.1313 11.0685 13.3885 10.75 12.5 10.75C11.6115 10.75 10.8688 11.0685 10.2708 11.7055C9.68532 12.3123 9.36198 13.1405 9.375 14C9.375 14.8927 9.67396 15.6575 10.2708 16.2945C10.8688 16.9315 11.6115 17.25 12.5 17.25C13.3885 17.25 14.124 16.9315 14.7063 16.2945ZM12.5 27C19.4031 27 25 21.1792 25 14C25 6.82075 19.4031 1 12.5 1C5.59687 1 0 6.82075 0 14C0 21.1792 5.59687 27 12.5 27Z"></path></svg>](https://observablehq.com/@linogaliana)]{.orange} [{{< fa brands python size=tiny >}}](https://pythonds.linogaliana.fr/)



- _Data scientist_ au lab de l'Insee :
    + [Administrateur Insee](https://www.insee.fr/fr/information/4774197) ;
    + Coordonnateur d'un [r√©seau de _data scientists_](https://ssphub.netlify.app/)

. . .

- Accompagnement de projets _data science_ ;


## [Qui suis-je ?](https://www.linogaliana.fr/)

D'autres cours que je donne √† l'ENSAE ou l'Insee peuvent vous int√©resser: 

- [`Python` pour la _data science_](https://pythonds.linogaliana.fr/) ;
- [Mise en production de projets _data science_](https://ensae-reproductibilite.github.io/website/) ;
- [Bonnes pratiques en `R` et `Git`](https://inseefrlab.github.io/formation-bonnes-pratiques-git-R/) ;
- [Donn√©es √©mergentes](https://ensai-donnees-emergentes.netlify.app) ;

__Et surtout consultez le portail complet de formation du [datalab de l'Insee](https://www.sspcloud.fr/formation)__




## Plan

::: {.incremental}

* 1Ô∏è‚É£ Evolutions r√©centes de l'√©cosyst√®me de la donn√©e ;
* 2Ô∏è‚É£ Pourquoi parler de mise en production ?
* 3Ô∏è‚É£ Cr√©ation d'un _pipeline_ sur donn√©es de transactions immobili√®res ;
* 4Ô∏è‚É£ Enjeux de la mise en production par le biais d'une API
* 5Ô∏è‚É£ _APIfication_ de notre mod√®le de prix ;
* 6Ô∏è‚É£ Comment aller plus loin ?
* üöÄ

:::

## Objectifs p√©dagogiques

<br>

- Comprendre les [__implications pratiques__]{.orange} de l'utilisation accrue du _machine learning_ pour la mod√©lisation ;

. . .

- Construire un _pipeline_ de _machine learning_ avec [{{< fa brands python >}}]{.blue2} ;
    + [Donn√©es de transactions immobili√®res DVF](https://app.dvf.etalab.gouv.fr/).

. . .

- D√©couvrir la mise √† disposition de mod√®les sous forme d'API:
    + √ätre √† la page de la pratique moderne de la _data science_.


{{< include "_0_contexte.qmd"  >}}


{{< include "_1_introduction.qmd"  >}}

# Application 1: _pipeline_ de _machine learning_

## Prise en main du `SSP Cloud`

![](https://git.lab.sspcloud.fr/diit/presentation/energy-data-hack-2022/20220523-day_1-onyxia_onboarding/-/raw/main/slideshow/DragonHoldingComputer.svg)

## Le SSP Cloud, c'est quoi ?

![](https://git.lab.sspcloud.fr/diit/presentation/energy-data-hack-2022/20220523-day_1-onyxia_onboarding/-/raw/main/slideshow/macbook_onyxia.png)

## Le SSP Cloud, c'est quoi ?

- Des serveurs h√©berg√©s √† l'Insee avec de nombreux logiciels statistiques (dont {{< fa brands python >}} ) dessus
- Environnement ouvert √† des formations en _data science_
pour d√©couvrir et exp√©rimenter
- __Seulement avec des donn√©es en open data__


:::{.callout-note}
Plus de d√©tails dans la [documentation du `SSP Cloud`](https://www.sspcloud.fr/formation)
:::

## Pourquoi utiliser le SSP Cloud ?

- P√©nible d'installer `Python` et une ribambelle de _packages_ de _data science_
- Mise √† disposition d'un environnement standardis√©:
    + TP parfaitement reproductibles
- Un TP peut √™tre lanc√© en un clic-bouton:
    + <a href="https://datalab.sspcloud.fr/launcher/ide/jupyter-python?autoLaunch=true&amp;onyxia.friendlyName=%C2%ABpython-datascience%C2%BB&amp;init.personalInit=%C2%ABhttps%3A%2F%2Fraw.githubusercontent.com%2Flinogaliana%2Fpython-datascientist%2Fmaster%2Fsspcloud%2Finit-jupyter.sh%C2%BB&amp;init.personalInitArgs=%C2%ABmodelisation%206_pipeline%C2%BB&amp;security.allowlist.enabled=false" target="_blank" rel="noopener"><img src="https://img.shields.io/badge/SSP%20Cloud-Tester_avec_Jupyter-orange?logo=Jupyter&amp;logoColor=orange" alt="Onyxia"></a>


## Cr√©er un compte

- Utiliser votre adresse mail universitaire pour cr√©er un compte sur [datalab.sspcloud.fr/](https://datalab.sspcloud.fr/)
- Votre nom d‚Äôutilisateur ne doit contenir ni caract√®res accentu√©s, ni caract√®re sp√©cial, ni signe de ponctuation:

> Vous pouvez adopter le format prenomnom en faisant attention aux r√®gles pr√©c√©dentes. Par exemple, si vous vous appelez J√©r√¥me-G√©rard L‚ÄôH√¢lt√®re, votre nom d‚Äôutilisateur pourra √™tre __jeromegerardlhaltere__.


## Application 1

- Objectifs:
    - Mod√®le de prix sur donn√©es immobili√®res ;
    - _Feature engineering_, validation crois√©e, etc. ;
    - D√©couvrir les _pipelines_ `Scikit` ;

- Direction üëâÔ∏è chapitre _"Pipeline"_ de [https://pythonds.linogaliana.fr](https://pythonds.linogaliana.fr/content/modelisation/6_pipeline.html)



# Avancer vers la mise en production d'un mod√®le üöÄ

## Vers la mise en production

- On a construit un projet de data science [**reproductible**]{.orange} et conforme aux [**standards**]{.orange} des bonnes pratiques.

. . .

- Pour [**valoriser**]{.orange} le projet, il faut le [**d√©ployer**]{.orange} dans un environnement en lien avec les [**utilisateurs**]{.blue2}:
    - Quel est le [**format**]{.blue2} adapt√© pour le valoriser ?
    - Quelle [**infrastructure de production**]{.blue2} ?
    - Comment [**automatiser**]{.blue2} le processus de d√©ploiement ?

## Format de valorisation

- [**Crit√®res**]{.orange} √† prendre en compte :
    - Quels sont les [**utilisateurs**]{.blue2} potentiels ?
    - Seulement de la [**mise √† disposition**]{.blue2}, ou besoin d'[**interactivit√©**]{.blue2} ?
    - Sp√©cificit√©s ML : entra√Ænement en [**batch**]{.blue2} ou [**online**]{.blue2} ?
    - Besoin de [**scalabilit√©**]{.blue2} ?

- [**Formats usuels**]{.orange} : API, application web, dashboard, site internet, rapport automatis√©...

## _Workflow_ classique

<br>
Progresser pas √† pas pour faciliter l'utilisation du mod√®le:

::: {.incremental}
1. Transformer les _notebooks_ en **[_script_]{.orange}** ;
2. Cr√©er une [__API en local__]{.orange} avec {{< fa brands python >}} pour faciliter le `predict` ;
3. [__D√©ployer l'API__]{.orange} pour la rendre disponible √† tous ;
4. Greffer des [__applications clientes__]{.orange} pour faciliter l'usage.
:::

::: {.callout-note}
Chaque √©tape est une progression dans l'√©chelle de la technicit√© et de la reproductibilit√©.
:::


## Exposer un mod√®le via une API REST

- [**API** : **interface**]{.orange} entre l'utilisateur (client) et le mod√®le entra√Æn√©

- [**API REST**]{.orange} : permet de requ√™ter le mod√®le avec une syntaxe simple (HTTP) et de mani√®re *scalable*

. . .

![](https://ensae-reproductibilite.github.io/slides/img/api-docker.png){fig-align="center"}

## D√©velopper une API en local {.scrollable}

<h4>Etape 1: modulariser la consommation du mod√®le</h4>

* _Scripts_ pour les diff√©rentes √©tapes du _pipeline_ ML:
    + R√©cup√©ration des donn√©es ;
    + D√©finition _pipeline_ `Scikit`: _preprocessing_, _training_ ;
    + Consommation du mod√®le pour `predict`.

. . .

* D√©finir une fonction qui prend en argument les variables du mod√®le

<details>
<summary>
Exemple
</summary>

::: {.python}
```python
def predict(
    month: int = 3,
    nombre_lots: int = 1,
    code_type_local: int = 2,
    nombre_pieces_principales: int = 3,
    surface: float = 75
) -> float:
    """
    """

    df = pd.DataFrame(
        {
            "month": [month],
            "Nombre_de_lots": [nombre_lots],
            "Code_type_local": [code_type_local],
            "Nombre_pieces_principales": [nombre_pieces_principales],
            "surface": [surface]
        }
    )

    prediction = model.predict(df)

    return prediction
```
:::

</details>


## D√©velopper une API en local {.scrollable}

<h4>Etape 2: cr√©er une API en local</h4>

- `FastAPI`: _framework_ simple pour cr√©er une API avec {{< fa brands python >}}
    + Tr√®s simple de transformer fonctions en API ; 
    + Documentation automatis√©e pour le _swagger_

<details>
<summary>
Exemple
</summary>

::: {.python}
```python
@app.get("/predict", tags=["Predict"])
async def predict(
    month: int = 3,
    nombre_lots: int = 1,
    code_type_local: int = 2,
    nombre_pieces_principales: int = 3,
    surface: float = 75
) -> float:
    """
    """

    df = pd.DataFrame(
        {
            "month": [month],
            "Nombre_de_lots": [nombre_lots],
            "Code_type_local": [code_type_local],
            "Nombre_pieces_principales": [nombre_pieces_principales],
            "surface": [surface]
        }
    )

    prediction = model.predict(df)

    return prediction
```
:::

</details>

## Application 2

- Objectif:
    - D√©velopper une API pour consommer le mod√®le d√©velopp√© pr√©c√©demment ;


- Direction üëâÔ∏è chapitre _"API de machine learning"_ de [https://pythonds.linogaliana.fr](https://pythonds.linogaliana.fr/content/modelisation/7_mlapi.html)


# Aller plus loin: automatiser la cr√©ation de l'API

## Limite de l'approche pr√©c√©dente {.smaller}

- L'entra√Ænement et la cr√©ation de l'API sont [__faits √† la main__]{.orange}:
    + Approche artisanale jusqu'ici ;
    + MLOps: passer √† l'√¢ge industriel.

. . .

- Automatiser :
    + L'__[entra√Ænement du mod√®le]{.blue2}__ (voir [formation MLOps](https://inseefrlab.github.io/formation-mlops/slides/en/index.html) de l'Insee) ;
    + La __[cr√©ation et le d√©ploiement de l'API]{.blue2}__ (voir cours [mise en production](https://ensae-reproductibilite.github.io/website/) de l'ENSAE).

. . .

- Le CI/CD adapt√© aux projets de _machine learning_.

::: {.callout-note}
# CI/CD: _kesako_ ?

- [__Int√©gration continue (CI)__]{.orange} : √† chaque modification du code source, l‚Äôapplication est automatiquement test√©e et reconstruite ;
- [__D√©ploiement continu (CD)__]{.orange} : les nouvelles versions valid√©es sont automatiquement mise √† disposition aux utilisateurs.
:::


## D√©ployer une API

- Rendre disponible √† d'autres utilisateurs l'API ;

. . .

- N√©cessite une infrastructure:
    + AWS, GCP, Azure...
    + Infra `Kubernetes` _on premise_

. . .

- Selon les organisations, pas forc√©ment _data scientist_ qui fait cela
    + Mais, _data scientist_ doit savoir √©changer avec l'√©quipe qui d√©ploie l'API.


## D√©ployer une API

<h4>Exemple de r√©utilisation facilit√©eüöÄ</h4>

<br>

:::: {.columns}

::: {.column width="50%"}
```{ojs}
html`<div>Nombre de pi√®ces</div><div>${viewof pieces_principales}</div>`
```
:::

::: {.column width="50%"}
```{ojs}
html`<div>Surface de l'appartement</div><div>${viewof surface}</div>`
```
:::

::::

```{ojs}
viewof pieces_principales = Inputs.range([1, 12], {step: 1, value: 6})
```

```{ojs}
viewof surface = Inputs.range([1, 300], {step: 1, value: 50})
```


```{ojs}
md`${return_message}`
```

```{ojs}
html`${url_api_print}`
```

::: {.callout-note}
[Documentation de l'API](https://dvf-simple-api.lab.sspcloud.fr/docs)
:::


```{ojs}
url_api_dvf = `https://dvf-simple-api.lab.sspcloud.fr/predict?month=4&nombre_lots=1&code_type_local=2&nombre_pieces_principales=${pieces_principales}&surface=${surface}`
```

```{ojs}
url_api_print = md`[<span class="blue-underlined">https://dvf-simple-api.lab.sspcloud.fr/predict?</span>month=4&nombre_lots=1&code_type_local=2&nombre_pieces_principales=<span class="blue-underlined">${pieces_principales}</span>&surface=<span class="blue-underlined">${surface}</span>](${url_api_dvf})`
```


```{ojs}
value = d3.json(url_api_dvf).then(data => {
    // Access the 'value' property from the object
    let originalNumber = data;

    // Convert it to a floating-point number
    let numericValue = parseFloat(originalNumber);

    // Round the number
    let roundedNumber = Math.round(numericValue).toLocaleString();

    return roundedNumber;
}).catch(error => console.error('Error:', error));
```

```{ojs}
return_message = `Valeur estim√©e de l'appartement: <span class="blue2">__${value} ‚Ç¨__</span>`
```


## Conclusion {.smaller}

- Un _pipeline_ bien pens√© est [__facile √† mettre en production__]{.orange}
    + `Scikit` & `FastAPI`: combo üî• pour mettre √† disposition un mod√®le ;

. . .

- En seulement 6 heures on a:
    - __[R√©cup√©r√©]{.blue2}__ et __[nettoy√©]{.blue2}__ des donn√©es ;
    - __[Cr√©√© un _pipeline_]{.blue2}__ fonctionnel de _machine learning_,
    - __[Cr√©e une API]{.blue2}__ pour mettre √† disposition le mod√®le.

. . .

- On peut maintenant se [__concentrer sur l'am√©lioration de la qualit√©__]{.orange} du mod√®le:
    - Ouvre vers le _MLOps_: combiner mod√®le en production, mod√®les en d√©veloppement, etc.
    - Enjeux de _monitoring_ de la qualit√© du mod√®le avec arriv√©e de nouvelles donn√©es.



## Pour aller plus loin

<br>

Quelques ressources compl√©mentaires

- [Mise en production de projets _data science_](https://ensae-reproductibilite.github.io/website/) (ENSAE, 3e ann√©e) ;
- Excellente [formation au `MLOps`](https://inseefrlab.github.io/formation-mlops/slides/en/index.html) (coll√®gues de l'Insee üòâ).
- Me contacter: [lino.galiana@insee.fr](mailto:lino.galiana@insee.fr)

__Corrections__:

- [Chapitre _pipeline_](https://github.com/linogaliana/python-datascientist-notebooks/blob/main/corrections/modelisation/6_pipeline.ipynb) ;
- [Chapitre API](https://github.com/linogaliana/python-datascientist-notebooks/blob/main/corrections/modelisation/7_mlapi.ipynb).